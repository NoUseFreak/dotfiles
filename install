#!/usr/bin/env python

import os
from os.path import isdir, join, expanduser, islink, isfile
import re
import sys
from glob import glob
from subprocess import call
import subprocess

dotfiles = expanduser('~/.dotfiles')
homedir = expanduser('~')

def cmd_exists(cmd):
    return subprocess.call("type " + cmd, shell=True, 
        stdout=subprocess.PIPE, stderr=subprocess.PIPE) == 0

print 'Installing dependecies'
if not cmd_exists('cmake'):
    if cmd_exists('brew'):
        call('brew install cmake', shell=True)
    else:
        print 'ERR: Could not install cmake, make sure to install it yourself.'
        print 'ERR: Please install brew to make your life easier on mac.'
        sys.exit(1)

print 'Installing symlinks'
if not isdir(homedir):
    os.mkdir(homedir)

for source in glob(dotfiles+'/*/*.symlink'):
    regex = re.compile('[^\/]+\/(.*)\.symlink')
    dest = expanduser(homedir+'/.'+regex.match(source.replace(dotfiles+'/', '')).group(1))
    print ' - '+source
    print '   > '+dest

    if isfile(dest) or isdir(dest):
        if not islink(dest):
            print 'ERR: '+dest+' need to be backuped first.'
            sys.exit(1)
        os.unlink(dest)

    os.symlink(source, dest)

if not isdir(homedir+'/.config'):
    os.mkdir(homedir+'/.config')
for source in glob(dotfiles+'/*/*.configsymlink'):
    regex = re.compile('[^\/]+\/(.*)\.configsymlink')
    dest = expanduser(homedir+'/.config/'+regex.match(source.replace(dotfiles+'/', '')).group(1))
    print ' - '+source
    print '   > '+dest

    if isfile(dest) or isdir(dest):
        if not islink(dest):
            print 'ERR: '+dest+' need to be backuped first.'
            sys.exit(1)
        os.unlink(dest)

    os.symlink(source, dest)

print 'Installing vim plugin manager'
call('curl -fLso '+homedir+'/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim', shell=True)

print 'Installing vim plugins'
call('vim +PlugInstall 1 +qall', shell=True)

print 'Installing warp directory'
if not isdir(homedir+'/bin'):
    os.mkdir(homedir+'/bin')
if not isdir(homedir+'/bin/wd'):
    call('git clone https://github.com/mfaerevaag/wd.git '+homedir+'/bin/wd || true', shell=True)
print 'Installing Powerline font'
if not isfile(homedir+'/.fonts/PowerlineSymbols.otf'):
    call('curl -fLso '+homedir+'/.fonts/PowerlineSymbols.otf https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf', shell=True)

